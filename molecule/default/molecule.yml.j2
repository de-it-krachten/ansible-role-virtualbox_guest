---

dependency:
  name: galaxy
driver:
  name: vagrant
lint: |
  set -e
  yamllint .
  ansible-lint -c .ansible-lint-molecule
platforms:
{% for platform in MOLECULE_DISTROS %}
  - name: virtualbox-guest-{{ platform.name }}-node1
    box: "{{ platform.box }}"
    memory: "{{ platform.memory | default('2048') }}"
    cpus: "{{ platform.cpus | default('2') }}"
    config_options:
      ssh.keep_alive: yes
      ssh.remote_user: "'vagrant'"
{% endfor %}
provisioner:
  name: ansible
{% if MOLECULE_ANSIBLE_ARGS is defined %}
  ansible_args:
{% for molecule_ansible_arg in MOLECULE_ANSIBLE_ARGS %}
    - {{ molecule_ansible_arg }}
{% endfor %}
{% endif %}
  env:
    ANSIBLE_PIPELINING: "True"
  lint:
    name: ansible-lint
  playbooks:
    converge: ${MOLECULE_PLAYBOOK:-converge.yml}
  inventory:
    group_vars: {}
    host_vars:
{% for platform in MOLECULE_DISTROS %}
      virtualbox-guest-{{ platform.name }}-node1:
        gnome_desktop_minimal: true

{% endfor %}
scenario:
  name: default
  test_sequence:
    - dependency
    - lint
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - side_effect
    - verify
    - cleanup
    - destroy
verifier:
  name: ansible
